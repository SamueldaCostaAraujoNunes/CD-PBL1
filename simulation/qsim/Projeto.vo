// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"

// DATE "03/05/2021 17:57:45"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Entradas (
	LOTE_COMPROMETIDO,
	IN_C,
	IN_A,
	IN_B,
	IN_D,
	IN_E,
	LOTE_ACEITO,
	LOTE_RECUSADO);
output 	LOTE_COMPROMETIDO;
input 	IN_C;
input 	IN_A;
input 	IN_B;
input 	IN_D;
input 	IN_E;
output 	LOTE_ACEITO;
output 	LOTE_RECUSADO;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \IN_C~combout ;
wire \IN_B~combout ;
wire \IN_A~combout ;
wire \inst3~0_combout ;
wire \IN_E~combout ;
wire \IN_D~combout ;
wire \inst28~0_combout ;
wire \inst28~1_combout ;
wire \inst3~combout ;
wire \inst38~combout ;


// Location: PIN_6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \IN_C~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\IN_C~combout ),
	.padio(IN_C));
// synopsys translate_off
defparam \IN_C~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \IN_B~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\IN_B~combout ),
	.padio(IN_B));
// synopsys translate_off
defparam \IN_B~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \IN_A~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\IN_A~combout ),
	.padio(IN_A));
// synopsys translate_off
defparam \IN_A~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X4_Y2_N8
maxii_lcell \inst3~0 (
// Equation(s):
// \inst3~0_combout  = (\IN_C~combout  & (((\IN_B~combout  & \IN_A~combout ))))

	.clk(gnd),
	.dataa(\IN_C~combout ),
	.datab(vcc),
	.datac(\IN_B~combout ),
	.datad(\IN_A~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\inst3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \inst3~0 .lut_mask = "a000";
defparam \inst3~0 .operation_mode = "normal";
defparam \inst3~0 .output_mode = "comb_only";
defparam \inst3~0 .register_cascade_mode = "off";
defparam \inst3~0 .sum_lutc_input = "datac";
defparam \inst3~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \IN_E~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\IN_E~combout ),
	.padio(IN_E));
// synopsys translate_off
defparam \IN_E~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \IN_D~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\IN_D~combout ),
	.padio(IN_D));
// synopsys translate_off
defparam \IN_D~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X4_Y2_N2
maxii_lcell \inst28~0 (
// Equation(s):
// \inst28~0_combout  = (\IN_C~combout  & ((\IN_B~combout  $ (\IN_A~combout )))) # (!\IN_C~combout  & (((\IN_B~combout  & \IN_A~combout ))))

	.clk(gnd),
	.dataa(\IN_C~combout ),
	.datab(vcc),
	.datac(\IN_B~combout ),
	.datad(\IN_A~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\inst28~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \inst28~0 .lut_mask = "5aa0";
defparam \inst28~0 .operation_mode = "normal";
defparam \inst28~0 .output_mode = "comb_only";
defparam \inst28~0 .register_cascade_mode = "off";
defparam \inst28~0 .sum_lutc_input = "datac";
defparam \inst28~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N4
maxii_lcell \inst28~1 (
// Equation(s):
// \inst28~1_combout  = (\IN_E~combout  & ((\IN_D~combout  & ((\inst28~0_combout ))) # (!\IN_D~combout  & (\inst3~0_combout )))) # (!\IN_E~combout  & (\inst3~0_combout  & (\IN_D~combout )))

	.clk(gnd),
	.dataa(\inst3~0_combout ),
	.datab(\IN_E~combout ),
	.datac(\IN_D~combout ),
	.datad(\inst28~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\inst28~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \inst28~1 .lut_mask = "e828";
defparam \inst28~1 .operation_mode = "normal";
defparam \inst28~1 .output_mode = "comb_only";
defparam \inst28~1 .register_cascade_mode = "off";
defparam \inst28~1 .sum_lutc_input = "datac";
defparam \inst28~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N6
maxii_lcell inst3(
// Equation(s):
// \inst3~combout  = ((\IN_E~combout  & (\IN_D~combout  & \inst3~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\IN_E~combout ),
	.datac(\IN_D~combout ),
	.datad(\inst3~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\inst3~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst3.lut_mask = "c000";
defparam inst3.operation_mode = "normal";
defparam inst3.output_mode = "comb_only";
defparam inst3.register_cascade_mode = "off";
defparam inst3.sum_lutc_input = "datac";
defparam inst3.synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N5
maxii_lcell inst38(
// Equation(s):
// \inst38~combout  = (\inst3~0_combout  & ((\IN_E~combout ) # ((\IN_D~combout )))) # (!\inst3~0_combout  & (\IN_E~combout  & (\IN_D~combout  & \inst28~0_combout )))

	.clk(gnd),
	.dataa(\inst3~0_combout ),
	.datab(\IN_E~combout ),
	.datac(\IN_D~combout ),
	.datad(\inst28~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\inst38~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst38.lut_mask = "e8a8";
defparam inst38.operation_mode = "normal";
defparam inst38.output_mode = "comb_only";
defparam inst38.register_cascade_mode = "off";
defparam inst38.sum_lutc_input = "datac";
defparam inst38.synch_mode = "off";
// synopsys translate_on

// Location: PIN_74,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \LOTE_COMPROMETIDO~I (
	.datain(\inst28~1_combout ),
	.oe(vcc),
	.combout(),
	.padio(LOTE_COMPROMETIDO));
// synopsys translate_off
defparam \LOTE_COMPROMETIDO~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_72,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \LOTE_ACEITO~I (
	.datain(\inst3~combout ),
	.oe(vcc),
	.combout(),
	.padio(LOTE_ACEITO));
// synopsys translate_off
defparam \LOTE_ACEITO~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_86,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \LOTE_RECUSADO~I (
	.datain(!\inst38~combout ),
	.oe(vcc),
	.combout(),
	.padio(LOTE_RECUSADO));
// synopsys translate_off
defparam \LOTE_RECUSADO~I .operation_mode = "output";
// synopsys translate_on

endmodule
